@model ForumApp.Models.Post

@{
    ViewData["Title"] = Model.Title;
    // Xử lý giá trị UserId và TotalPages trong Razor để đảm bảo JavaScript nhận được giá trị hợp lệ
    var userId = Context.Session.GetInt32("UserId") ?? 0;
    var totalPages = Model.TotalPages ?? 1;
}

<div class="container mt-4">
    <div class="card">
        <div class="card-header bg-primary text-white">
            <h2 class="card-title mb-0">@Model.Title</h2>
        </div>
        <div class="card-body">
            <div class="mb-3">
                <p class="mb-1"><strong>Người đăng:</strong> @Model.User?.Username</p>
                <p class="mb-1"><strong>Ngày đăng:</strong> @Model.CreatedAt.ToString("dd/MM/yyyy")</p>
                <p class="mb-1"><strong>Danh mục:</strong> @Model.Category?.Name</p>

                @if (Model.Type == "Trả phí")
                {
                    <p><strong>Loại bài viết:</strong> <span class="text-danger">Trả phí</span></p>
                    <p><strong>Giá:</strong> @(Model.CurrentPrice != null ? string.Format("{0:N0}", Model.CurrentPrice) + " VNĐ" : "Chưa có thông tin")</p>
                }
                else
                {
                    <p><strong>Loại bài viết:</strong> Miễn phí</p>
                }

            </div>

            @if (!string.IsNullOrEmpty(Model.FilePath))
            {
                <div class="mb-3">
                    <h3>Nội dung bài viết:</h3>

                    <div class="mb-2">
                        <a href='@Url.Content(Model.FilePath)'
                           target="_blank"
                           class="btn btn-primary me-2">
                            Tải nội dung
                        </a>

                        <!-- Nút Bookmark -->
                        <button class="btn btn-outline-warning bookmark-btn"
                                data-post-id="@Model.Id"
                                data-bookmarked="@ViewBag.IsBookmarked.ToString().ToLower()">
                            <i class="fas fa-bookmark"></i>
                        </button>
                    </div>

                    <!-- Hiển thị nội dung file Word -->
                    <div>
                        <iframe id="wordContentFrame"
                                src="@Url.Action("ViewWordContent", "Post", new { id = Model.Id, pageNumber = 1 })"
                                style="width:100%; min-height:600px; border:1px solid #ccc;">
                        </iframe>
                    </div>

                    @if (Model.TotalPages.HasValue && Model.TotalPages.Value > 1)
                    {
                        <div class="mt-2">
                            <button class="btn btn-info btn-sm me-2" onclick="prevPage()">Trang trước</button>
                            <button class="btn btn-info btn-sm" onclick="nextPage()">Trang sau</button>
                            <span class="ms-3">
                                Trang hiện tại: <span id="currentPage">1</span> / @Model.TotalPages
                            </span>
                        </div>
                    }
                </div>
            }
            else
            {
                <p class="mb-3">Không có nội dung</p>
            }

            <hr />

            <h3>Đánh giá bài viết</h3>
            <div class="mb-3">
                <p><strong>Tổng đánh giá:</strong> @Model.TotalRating.ToString("0.0")</p>
            </div>
            <div class="input-group mb-3" style="max-width: 200px;">
                <select class="form-select" id="rating-value">
                    <option value="1">1 sao</option>
                    <option value="2">2 sao</option>
                    <option value="3">3 sao</option>
                    <option value="4">4 sao</option>
                    <option value="5">5 sao</option>
                </select>
                <button class="btn btn-success" id="submit-rating" data-post-id="@Model.Id">Gửi đánh giá</button>
            </div>
            <div id="rating-message" class="alert alert-info d-none"></div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Cập nhật trạng thái nút Bookmark khi load trang
            $(".bookmark-btn").each(function () {
                var isBookmarked = $(this).data("bookmarked") === "true";
                if (isBookmarked) {
                    $(this).addClass("btn-warning").removeClass("btn-outline-warning");
                }
            });

            // Xử lý sự kiện Bookmark
            $(".bookmark-btn").click(function () {
                var postId = $(this).data("post-id");
                var $btn = $(this);
                var userId = @userId;
                if (userId === 0) {
                    alert("Bạn cần đăng nhập để sử dụng tính năng Bookmark!");
                    window.location.href = "/Account/Login";
                    return;
                }

                $.ajax({
                    url: "/Bookmark/AddOrRemove",
                    type: "POST",
                    data: { postId: postId },
                    success: function (response) {
                        console.log("Response:", response);
                        if (response && response.success !== undefined) {
                            alert(response.message);
                            if (response.bookmarked) {
                                $btn.addClass("btn-warning").removeClass("btn-outline-warning");
                            } else {
                                $btn.addClass("btn-outline-warning").removeClass("btn-warning");
                            }
                        } else {
                            alert("Lỗi phản hồi từ server!");
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Lỗi AJAX:", xhr, status, error);
                        alert("Không thể kết nối đến server! Vui lòng thử lại.");
                    }
                });
            });

            // Xử lý đánh giá
            $("#submit-rating").click(function () {
                var postId = $(this).data("post-id");
                var rating = $("#rating-value").val();

                $.post("/Rating/RatePost", { postId: postId, rating: rating }, function (response) {
                    $("#rating-message").removeClass("d-none").text(response.message);
                    if (response.success) {
                        location.reload();
                    }
                });
            });
        });

        var currentPage = 1;
        var totalPages = @totalPages;

        function updateFrame() {
            var url = '@Url.Action("ViewWordContent", "Post")?id=@Model.Id&pageNumber=' + currentPage;
            document.getElementById("wordContentFrame").src = url;
            document.getElementById("currentPage").textContent = currentPage;
        }

        function nextPage() {
            if (currentPage < totalPages) {
                currentPage++;
                updateFrame();
            }
        }

        function prevPage() {
            if (currentPage > 1) {
                currentPage--;
                updateFrame();
            }
        }
    </script>
}
