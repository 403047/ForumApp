@model IEnumerable<ForumApp.Models.Category>

@{
    ViewData["Title"] = "Quản lý Danh Mục";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet">

<style>
    .back-btn {
        position: absolute;
        top: 24px;
        left: 32px;
        z-index: 10;
    }

    .container-relative {
        position: relative;
    }

    .card {
        border-radius: 18px;
        box-shadow: 0 4px 24px rgba(0,0,0,0.10);
    }

    .card-header {
        border-top-left-radius: 18px !important;
        border-top-right-radius: 18px !important;
        font-size: 1.3rem;
        font-weight: 600;
        letter-spacing: 0.5px;
        background: linear-gradient(90deg, #0d6efd 60%, #0dcaf0 100%);
    }

    .btn-sm {
        padding: 5px 10px;
        border-radius: 8px;
        font-weight: 500;
    }

    .btn-light:hover {
        background: #e2e6ea;
    }
</style>

<a href="@Url.Action("Index", "GiaoDienAdmin")" class="btn btn-outline-primary back-btn">
    <i class="bi bi-arrow-left"></i> Quay lại
</a>
<div class="container mt-4">
    <div class="card shadow-lg">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h3 class="mb-0">Quản lý Danh Mục</h3>
            <button class="btn btn-light btn-sm" data-bs-toggle="modal" data-bs-target="#addCategoryModal">Thêm danh mục</button>
        </div>
        <div class="card-body">
            <div id="danhMucTable">
                @await Html.PartialAsync("_DanhMucTable", Model)
            </div>
        </div>
    </div>
</div>

<!-- Toast thông báo -->
<div class="position-fixed bottom-0 end-0 p-3" style="z-index: 9999">
    <div id="toastMessage" class="toast align-items-center text-bg-danger border-0" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="d-flex">
            <div class="toast-body" id="toastBody">
                <!-- Nội dung thông báo -->
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    </div>
</div>

<!-- Modal Thêm Danh Mục -->
<div class="modal fade" id="addCategoryModal" tabindex="-1" aria-labelledby="addCategoryLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addCategoryLabel">Thêm Danh Mục</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <input type="text" id="categoryName" class="form-control" placeholder="Tên danh mục">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-primary" onclick="themDanhMuc()">Thêm</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Sửa Danh Mục -->
<div class="modal fade" id="editCategoryModal" tabindex="-1" aria-labelledby="editCategoryLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editCategoryLabel">Sửa Danh Mục</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="editCategoryId">
                <input type="text" id="editCategoryName" class="form-control" placeholder="Tên danh mục mới">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-primary" onclick="capNhatDanhMuc()">Lưu thay đổi</button>
            </div>
        </div>
    </div>
</div>

<script>
    function themDanhMuc() {
        var tenDanhMuc = document.getElementById("categoryName").value;
        if (!tenDanhMuc.trim()) {
            alert("Tên danh mục không được để trống");
            return;
        }

        fetch("@Url.Action("ThemDanhMuc", "DanhMuc")", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ Name: tenDanhMuc })
        })
        .then(response => response.text())
        .then(data => {
            document.getElementById("danhMucTable").innerHTML = data;
            document.getElementById("categoryName").value = "";
            var modal = bootstrap.Modal.getInstance(document.getElementById("addCategoryModal"));
            modal.hide();
        })
        .catch(error => console.error("Lỗi:", error));
    }

    // Hàm mở modal sửa danh mục
    function suaDanhMuc(id, tenHienTai) {
        document.getElementById("editCategoryId").value = id;
        document.getElementById("editCategoryName").value = "";
        var modal = new bootstrap.Modal(document.getElementById("editCategoryModal"));
        modal.show();
    }

    // Hàm cập nhật danh mục sau khi sửa
    function capNhatDanhMuc() {
        var id = document.getElementById("editCategoryId").value;
        var tenMoi = document.getElementById("editCategoryName").value;
        if (!tenMoi || !tenMoi.trim()) {
            alert("Tên danh mục không hợp lệ!");
            return;
        }

        fetch("@Url.Action("SuaDanhMuc", "DanhMuc")", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ Id: id, Name: tenMoi })
        })
        .then(response => response.text())
        .then(data => {
            document.getElementById("danhMucTable").innerHTML = data;
            var modal = bootstrap.Modal.getInstance(document.getElementById("editCategoryModal"));
            modal.hide();
            alert("Cập nhật danh mục thành công!");
        })
        .catch(error => console.error("Lỗi:", error));
    }

    // Hàm xóa danh mục
    function xoaDanhMuc(id) {
        if (!confirm("Bạn có chắc chắn muốn xóa danh mục này không?")) {
            return;
        }

        fetch("@Url.Action("XoaDanhMuc", "DanhMuc")", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ Id: id })
        })
        .then(response => {
            const contentType = response.headers.get("content-type");
            if (contentType && contentType.indexOf("application/json") !== -1) {
                return response.json().then(json => ({ json }));
            }
            return response.text().then(text => ({ text }));
        })
        .then(data => {
            if (data.json) {
                // Có lỗi, hiển thị toast
                showToast(data.json.message || "Có lỗi xảy ra!");
            } else {
                // Xóa thành công, cập nhật bảng
                document.getElementById("danhMucTable").innerHTML = data.text;
                alert("Xóa danh mục thành công!");
            }
        })
        .catch(error => console.error("Lỗi:", error));
    }

    // Hàm hiển thị toast Bootstrap
    function showToast(message) {
        document.getElementById("toastBody").innerText = message;
        var toastEl = document.getElementById("toastMessage");
        var toast = new bootstrap.Toast(toastEl);
        toast.show();
    }
</script>